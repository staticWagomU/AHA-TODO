---
import { getTodos, writeTodos, type Todo } from "../../todoFileOperations";
export const partial = true;

let todos: Todo[] = [];
try {
  todos = getTodos();

  const requestMethod = Astro.request.method;
  switch(requestMethod) {
    case "GET":
      Astro.response.status = 200;
      break;
    case "POST":
      const formData = await Astro.request.formData();
      const todo= formData.get("todo");
      if( typeof todo !== "string" ) throw new Error("todo is not string");
      todos.push({
        id: new Date().getTime(),
        title: todo,
        complete: false,
      });
      writeTodos(todos);
      Astro.response.status = 201;
      break;
    default:
      Astro.response.status = 405;
      throw new Error("Method not allowed");
  }
} catch (error) {
  console.error(error);
}
---

{
  todos.length ? (
    <ul class="space-y-4">
      {todos.map((todo: Todo) => (
        <li
          x-data=`{editing: false, title: "${todo.title}", id: "${todo.id}"}`
        >
        <div
            class="bg-white flex justify-between px-3 pb-3 pt-2 shadow-md group gap-2"
            hx-target="submit"
            x-show="!editing"
          >
              <input type="hidden" name="id" value={todo.id} />
              <input
                type="checkbox"
                class="flex-grow-0 flex-shrink-0"
                name="complete"
                id=`todo_${todo.id}`
                checked={todo.complete}
                hx-put=`/todos/${todo.id}`
                hx-trigger="change"
                hx-target="this"
              />
              <label
                for=`todo_${todo.id}`
                class="flex-grow mx-1 peer-checked:line-through"
                x-text="title">
              </label>
              <button
                class="flex-grow-0 flex-shrink-0 rounded bg-green-500 px-4 py-0.5 font-bold text-white flex items-center justify-center"
                x-on:click="editing = true"
              >
                <i data-feather="edit-3"></i>
              </button>
              <button
                class="flex-grow-0 flex-shrink-0 rounded bg-red-500 px-4 py-0.5 font-bold text-white flex items-center justify-center"
                hx-delete=`/todos/${todo.id}`
                hx-target="closest li"
                hx-swap="outerHTML swap:1s"
              >
                <i data-feather="trash"></i>
              </button>
          </div>
          <div
            class="bg-white flex justify-between px-3 pb-3 pt-2 shadow-md group gap-2"
            hx-target="submit"
            x-show="editing"
            id=`${todo.id}`
            x-data="{updateTitle(){patchTodo(id, title)}}"
          >
              <input
                type="checkbox"
                class="flex-grow-0 flex-shrink-"
                checked={todo.complete}
                disabled
              />
              <input
                type="text"
                x-model="title"
                class="flex-grow mx-1 peer-checked:line-through border-b-2 border-gray-200" />
              <button
                class="flex-grow-0 flex-shrink-0 rounded bg-green-500 px-4 py-0.5 font-bold text-white flex items-center justify-center"
                x-on:click="updateTitle();editing = false"
              >
                <i data-feather="check"></i>
              </button>
              <button
                class="flex-grow-0 flex-shrink-0 rounded bg-red-500 px-4 py-0.5 font-bold text-white flex items-center justify-center"
                x-on:click="editing = false"
              >
                <i data-feather="x"></i>
              </button>
          </div>
        </li>
      ))}
    </ul>
    <script>
      feather.replace();

      function patchTodo(id, title) {
        const url = `/todos/${id}`;
        const data = { title: title };
        fetch(url, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        })
        .then(response => response.json())
        .catch((error) => {
          console.error('Error:', error);
        });
      }
    </script>
  ) : (
    <p>TODOがありません。</p>
  )
}
