---
import fs from "node:fs";
import { todoFile } from "../../const";
import { z } from "astro:content";
export const partial = true;

const todoScheme =  z.object({
  id: z.number(),
  title: z.string(),
  complete: z.boolean(),
});
type TODO = z.infer<typeof todoScheme>;
let todos: TODO[] = [];
try {
  todos = JSON.parse(fs.readFileSync(todoFile, "utf-8").trim());
  todos.forEach((todo: TODO) => {
    todoScheme.parse(todo);
  });
  const requestMethod = Astro.request.method;
  if (requestMethod === "GET") {
  } else if (requestMethod === "POST") {
    const formData = await Astro.request.formData();
    const todo = formData.get("todo") || "";

    todos.push({
      id: new Date().getTime(),
      title: todo,
      complete: false,
    });
    fs.writeFileSync(todoFile, JSON.stringify(todos));
  } else {
    throw new Error("Method not allowed");
  }
} catch (error) {
  console.error(error);
}
---

{
  todos.length ? (
    <ul class="bg-white space-y-4">
      {todos.map((todo: TODO) => (
        <li>
          <div
            class="flex justify-between px-3 pb-3 pt-2 shadow-md group"
            hx-target="submit"
          >
            <input
              type="checkbox"
              class="w-1/12 peer"
              name="complete"
              checked={todo.complete}
            />
            <input type="hidden" name="id" value={todo.id} />
            <label for="todo_1" class="mx-1 w-9/12 peer-checked:line-through">
              {todo.title}
            </label>
            <button
              class="rounded w-2/12 bg-red-500 px-4 py-0 font-bold text-white"
              hx-delete=`/todo/${todo.id}`
            >
              DELETE
            </button>
          </div>
        </li>
      ))}
    </ul>
  ) : (
    <p>TODOがありません。</p>
  )
}
