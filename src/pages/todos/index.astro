---
import { getTodos, writeTodos, type Todo } from "../../todoFileOperations";
export const partial = true;

let todos: Todo[] = [];
try {
  todos = getTodos();

  const requestMethod = Astro.request.method;
  if (requestMethod === "GET") {
    Astro.response.status = 200;
  } else if (requestMethod === "POST") {
    const formData = await Astro.request.formData();
    const todo= formData.get("todo");
    if( typeof todo !== "string" ) throw new Error("todo is not string");
    todos.push({
      id: new Date().getTime(),
      title: todo,
      complete: false,
    });
    writeTodos(todos);
    Astro.response.status = 201;
  } else {
    Astro.response.status = 405;
    throw new Error("Method not allowed");
  }
} catch (error) {
  console.error(error);
}
---

{
  todos.length ? (
    <ul class="space-y-4">
      {todos.map((todo: Todo) => (
        <li>
          <div
            class="bg-white flex justify-between px-3 pb-3 pt-2 shadow-md group"
            hx-target="submit"
          >
            <input
              type="checkbox"
              class="w-1/12 peer"
              name="complete"
              checked={todo.complete}
              hx-put=`/todos/${todo.id}`
              hx-trigger="change"
              hx-target="this"
            />
            <input type="hidden" name="id" value={todo.id} />
            <label for="todo_1" class="mx-1 w-9/12 peer-checked:line-through">
              {todo.title}
            </label>
            <button
              class="rounded w-2/12 bg-red-500 px-4 py-0 font-bold text-white"
              hx-delete=`/todos/${todo.id}`
              hx-target="closest li"
              hx-swap="outerHTML swap:1s"
            >
              DELETE
            </button>
          </div>
        </li>
      ))}
    </ul>
  ) : (
    <p>TODOがありません。</p>
  )
}
